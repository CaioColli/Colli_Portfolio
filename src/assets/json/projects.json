[
    {
        "id": 1,
        "title": "Trunfer",
        "image": "/assets/images/projectImages/projectTrunfer.png",
        "description": "Trunfer é um projeto inspirado no jogo de cartas Super Trunfo, com um sistema de turnos, log e uma interface de jogo simples e intuitiva.",
        "demoLink": null,
        "fullDescription": "O Trunfer é um jogo digital inspirado no clássico Super Trunfo, trazendo uma experiência dinâmica e estratégica para os jogadores. Com um sistema de turnos automático, cada partida segue regras bem definidas: a primeira carta do baralho sempre deve ser jogada primeiro, sem opção de escolha, garantindo partidas equilibradas e emocionantes. O jogador que cria a sala inicia a primeira rodada, e a partir daí, o vencedor de cada disputa assume o próximo turno, até que apenas um jogador permaneça com todas as cartas e vença a partida./n/nPara tornar a experiência ainda mais envolvente, o Trunfer conta com um sistema de chat em tempo real, desenvolvido com WebSockets usando Ratchet, permitindo a comunicação fluida entre os participantes durante as partidas. Além disso, o jogo utiliza Server-Sent Events (SSE) para garantir atualizações periódicas do status da partida sem sobrecarregar o servidor com requisições desnecessárias./n/nO sistema permite a criação e personalização de baralhos, oferecendo total liberdade para os jogadores montarem seus próprios decks. Além disso, há um ambiente de lobby para gerenciar as partidas, onde os usuários podem criar salas, configurar regras e convidar amigos para jogar. O jogo também conta com um registro detalhado das ações dos jogadores, garantindo mais transparência e controle sobre o histórico das partidas./n/nA plataforma possui um painel administrativo completo, permitindo que administradores gerenciem usuários, ajustem permissões e moderem o ambiente de jogo. Novas funcionalidades estão em desenvolvimento, como um sistema de conquistas para recompensar os jogadores e a expansão das opções de administração para um controle ainda mais avançado sobre permissões e gerenciamento de contas./n/nO Trunfer foi desenvolvido no back-end PHP com o Slim Framework para a API, MySQL como banco de dados no e React.ts para o front-end com as bibliotecas Wouter e React Query para gerenciamento de navegação e requisições. A interface foi projetada para ser simples e intuitiva, tornando a experiência acessível para jogadores casuais e entusiastas de jogos de cartas. ",
        "backendGitHubLink": "https://github.com/CaioColli/Trunfer_Back",
        "frontendGitHubLink": "https://github.com/CaioColli/Trunfer_Front",
        "figmaLink": "https://www.figma.com/design/bCzCSigXs01UT5e1OwsGcx/Trunfer?m=auto&t=XJzYnmBtaKZxwlrs-6",
        "technologies": [
            "PHP",
            "SlimFramework",
            "Ratchet",
            "Respect/Validation",
            "MySQL",
            "React.ts",
            "CSS Modules",
            "Wouter",
            "React Query"
        ],
        "inProduction": true,
        "features": [
            "Jogo online",
            "Chat em tempo real",
            "Criação de cartas e baralhos",
            "Criação de partidas",
            "Painel para administradores",
            "Log do usuário"
        ]
    },
    {
        "id": 2,
        "title": "Bmw Showcase",
        "image": "/assets/images/projectImages/projectBmwShowcase.png",
        "description": "BMW Showcase é um projeto demonstrativo que apresenta um catálogo dos mais novos modelos da BMW, destacando seu design e inovação.",
        "demoLink": "https://bmw-pink-eta.vercel.app/",
        "fullDescription": "BMW Showcase é um catálogo digital interativo desenvolvido com React.js, projetado para apresentar os modelos mais recentes da BMW de forma intuitiva e envolvente. O usuário pode explorar os veículos por meio de uma pesquisa dinâmica e filtros avançados, permitindo refinar a busca por tipo de carroceria, combustível e linha do carro/n/nA experiência do usuário é enriquecida com animações e interações visuais, como efeitos em SVG ao passar o mouse sobre os cards, imagens que se transformam em vídeos dinâmicos e modais interativos que oferecem mais detalhes sobre cada modelo. Além disso, todas as páginas foram desenvolvidas com um design 100% responsivo, garantindo uma navegação fluida e intuitiva em qualquer dispositivo, seja desktop, tablet ou smartphone.",
        "backendGitHubLink": null,
        "frontendGitHubLink": "https://github.com/CaioColli/Bmw",
        "figmaLink": "https://www.figma.com/design/3EKgLfAXxd5Yg9dDLbsWEZ/BMW?m=auto&t=siyA1Tc0n2iwZWEF-6",
        "technologies": [
            "React.js",
            "GSAP",
            "React Router DOM",
            "Styled Components"
        ],
        "inProduction": false,
        "features": [
            "Pesquisa dinâmica",
            "Filtros avançados",
            "Animações e interações visuais",
            "Design 100% responsivo"
        ]
    },
    {
        "id": 3,
        "title": "Fallout Burguer",
        "image": "/assets/images/projectImages/projectFalloutBurguer.png",
        "description": "Fallout Burguer é um projeto de uma hamburgueria inspirado na temática do jogo Fallout.",
        "demoLink": "https://burguer-house-one.vercel.app/",
        "fullDescription": "Fallout Burger foi o meu primeiro projeto desenvolvido com React, onde pude aplicar e consolidar meus conhecimentos na biblioteca. Trata-se de um cardápio online interativo, permitindo que os usuários selecionem um ou mais itens e adicionem ao carrinho para simular uma compra./n/nApós escolher os produtos, o usuário é direcionado para a página de finalização do pedido, onde preenche um formulário com nome, número de celular e endereço. Além disso, há um card exibindo todos os itens selecionados, garantindo uma visão clara do pedido./n/nA finalização da compra acontece via WhatsApp, onde os dados são enviados diretamente para o contato do restaurante. Para fins de teste, utilizei meu número pessoal na integração.",
        "backendGitHubLink": null,
        "frontendGitHubLink": "https://github.com/CaioColli/FalloutBurguer",
        "figmaLink": "https://www.figma.com/design/5mgp8BLzfu7TvBB92lZkiY/Fallout-Burguer?m=auto&t=iBHymVadMUmUSwiJ-6",
        "technologies": [
            "React.js",
            "Css",
            "React Router DOM"
        ],
        "inProduction": false,
        "features": [
            "Cardápio online",
            "Finalização de pedido via WhatsApp",
            "Integração com WhatsApp"
        ]
    },
    {
        "id": 4,
        "title": "Ohana Travel",
        "image": "/assets/images/projectImages/projectOhana.png",
        "description": "Ohana Travel é um projeto para reservas de hospedagens, guia turisticos e aluguel de veiculos, no Havaí",
        "demoLink": null,
        "fullDescription": "Ohana Travel é uma plataforma fictícia desenvolvida para reservas de hospedagem, hotéis, apartamentos, passagens aéreas e um clube de benefícios. O projeto foi implementado com PHP e Slim Framework no back-end, utilizando Respect/Validation para validações e MySQL como banco de dados. O front-end foi criado com React e TypeScript, utilizando bibliotecas como Wouter, React Query e Tailwind CSS para proporcionar uma experiência interativa e bem estilizada. Na plataforma, os usuários podem explorar diversas ofertas, pesquisar tipos de acomodação — como hotéis, resorts e cabanas — e conferir opções de turismo no Havaí. A barra de pesquisa permite que encontrem facilmente o que procuram, seja uma reserva de hotel, passeio turístico ou modelo de veículo para aluguel. A plataforma conta com dois tipos de usuários: Administrador e Usuário Comum. O Administrador é responsável por gerenciar o site, adicionando ou removendo serviços, além de aprovar ou recusar novas solicitações enviadas pelos usuários. Já o Usuário pode explorar os serviços disponíveis e enviar pedidos de novos serviços para serem avaliados.",
        "backendGitHubLink": null,
        "frontendGitHubLink": null,
        "figmaLink": "https://www.figma.com/design/Pl793koUFM6ZZMhgoErfho/OhanaTravel?m=auto&t=ikvcFPEEEColSRW2-6",
        "technologies": [
            "PHP",
            "SlimFramework",
            "MySQL",
            "React",
            "Typescript",
            "Tailwind CSS",
            "Wouter",
            "React Query"
        ],
        "inProduction": true,
        "features": [
            "Pesquisa dinâmica",
            "Filtros avançados",
            "Reservas de hospedagem e aluguel de veículos",
            "Inserção de novos serviços",
            "Painel para administradores",
            "Painel para usuários",
            "Painel para adição de serviços"
        ]
    },
    {
        "id": 5,
        "title": "Barberly",
        "image": "/assets/images/projectImages/projectBarberly.png",
        "description": "Barberly é um projeto feito em Laravel para agendamento de horários para uma barbearia.",
        "demoLink": null,
        "fullDescription": "Barberly é um sistema completo para agendamento de horários em barbearias, desenvolvido em Laravel. O projeto oferece uma solução robusta e intuitiva, contemplando todas as funcionalidades necessárias para a gestão do negócio. O painel administrativo permite criar e editar serviços oferecidos, além de visualizar os agendamentos em tempo real. Na área do cliente, é possível agendar serviços, assinar planos mensais, avaliar atendimentos, acessar a localização da barbearia e consultar o histórico de serviços realizados. Todo o sistema foi desenvolvido com Laravel e Inertia.js integrado ao React com TypeScript, proporcionando uma experiência de uso dinâmica, performática e responsiva. A estilização é feita com Tailwind CSS e o armazenamento de dados é gerenciado por um banco de dados MySQL.",
        "backendGitHubLink": "https://github.com/CaioColli/Barberly",
        "frontendGitHubLink": null,
        "figmaLink": "https://www.figma.com/design/oOIteb5WQoMIZcBwdxf7f9/Barberly?node-id=0-1&p=f&t=bnAwGKiV0OdmpwuN-0",
        "technologies": [
            "PHP",
            "Laravel",
            "Inertia.js",
            "React",
            "Typescript",
            "Tailwind CSS"
        ],
        "inProduction": true,
        "features": [
            "Autenticação de usuários",
            "Painel administrativo",
            "Agenda de horários",
            "Sistema de avaliação",
            "Log de usuário"
        ]
    },
    {
        "id": 6,
        "title": "Anime World",
        "image": "/assets/images/projectImages/projectAnime.png",
        "description": "AnimeWorld foi um desafio de 10 dias para consumir uma API e desenvolver uma plataforma de animes.",
        "demoLink": "https://anime-world-mu.vercel.app/",
        "fullDescription": "AnimeWorld foi um projeto desenvolvido em HTML, CSS e JavaScript Vanilla. A plataforma oferece um sistema de pesquisa dinâmica, permitindo que os usuários pesquisem por animes ou mangás registrados na API. Na página inicial, os visitantes podem encontrar animes e mangás populares, além de recomendações personalizadas./n/nA plataforma também possui um sistema de filtros, permitindo que os usuários filtrem os resultados por gênero de anime ou mangá, proporcionando uma experiência de navegação mais personalizada. O projeto é totalmente responsivo, garantindo que funcione adequadamente em diversos dispositivos e tamanhos de tela./n/nAlém disso, o sistema conta com um tratamento de erros robusto, caso algum anime ou mangá esteja com informações ausentes ou incompletas, ou até mesmo sem dados disponíveis.",
        "backendGitHubLink": null,
        "frontendGitHubLink": "https://github.com/CaioColli/AnimeWorld",
        "figmaLink": null,
        "technologies": [
            "HTML",
            "CSS",
            "JavaScript"
        ],
        "inProduction": false,
        "features": [
            "Pesquisa dinâmica",
            "Filtros avançados",
            "Design 100% responsivo",
            "Tratamento de erros robusto",
            "Consumo de API"
        ]
    },
    {
        "id": 7,
        "title": "User Manager",
        "image": "/assets/images/projectImages/projectUserManager.png",
        "description": "User Manager foi um projeto de CRUD para gerenciamento robusto de usuários.",
        "demoLink": null,
        "fullDescription": "User Manager é um sistema de autenticação completo feito em PHP com Slim Framework. Ele usa Respect/Validation para validar as entradas de dados e conta com recursos como envio de e-mails para redefinição de senha e confirmação de e-mail, autenticação via JWT e criptografia ponta a ponta pra garantir mais segurança nos dados. Além disso, o sistema tem um CRUD completo para gerenciamento de usuário",
        "backendGitHubLink": "https://github.com/CaioColli/User_Manager",
        "frontendGitHubLink": null,
        "figmaLink": null,
        "technologies": [
            "PHP",
            "SlimFramework",
            "MySQL"
        ],
        "inProduction": false,
        "features": [
            "Cadastro, Login, Edição e Exclusão de usuários",
            "Reset de senha",
            "Confirmação de e-mail",
            "Disparo de e-mail",
            "Autenticação de JWT"
        ]
    },
    {
        "id": 8,
        "title": "Fallout Burguer API",
        "image": "/assets/images/projectImages/projectUserManager.png",
        "description": "Fallout Burguer API foi um projeto de plataforma integrada para hamburguerias, com gestão de produtos, estoque e pagamentos online.",
        "demoLink": null,
        "fullDescription": "Plataforma integrada para hamburguerias com login seguro, gerenciamento de produtos e estoque, pagamentos online via Mercado Pago e comunicação automatizada por e-mail e SMS, proporcionando eficiência e melhor experiência ao cliente.",
        "backendGitHubLink": "https://github.com/CaioColli/FalloutBurguerAPI",
        "frontendGitHubLink": null,
        "figmaLink": null,
        "technologies": [
            "PHP",
            "Laravel",
            "PostgreSQL"
        ],
        "inProduction": true,
        "features": [
            "Login seguro",
            "Gerenciamento de produtos e estoque",
            "Pagamentos online",
            "Comunicação automatizada",
            "Plataforma integrada"
        ]
    }
]